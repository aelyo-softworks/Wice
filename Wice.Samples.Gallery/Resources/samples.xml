<samples>
  <sample namespace="Samples.Layout.Border.BordersSample">void Layout(Visual parent)
{
    var canvas = new Canvas();
    parent.Children.Add(canvas);

    var rnd = new Random(Environment.TickCount);
    for (var i = 0; i &lt; 10; i++)
    {
        var box = new Border();
        // use composition brush
        box.RenderBrush = Compositor.CreateColorBrush(new _D3DCOLORVALUE(rnd.Next(0, int.MaxValue), rnd.NextByte(30)));
        box.Width = rnd.Next(10, 200);
        box.Height = rnd.Next(10, 150);
        canvas.Children.Add(box);
        Canvas.SetLeft(box, rnd.Next(0, 200));
        Canvas.SetTop(box, rnd.Next(0, 100));

        // if you hover the mouse on a box, it's color will change
        box.HoverRenderBrush = Compositor.CreateColorBrush(new _D3DCOLORVALUE(rnd.Next(0, int.MaxValue), rnd.NextByte(30)));
    }
}</sample>
  <sample namespace="Samples.Layout.Border.RoundBorderSample">void Layout(Visual parent)
{
    var border = new Border();
    border.BorderThickness = 2.5f;
    border.CornerRadius = new Vector2(5);
    border.BorderBrush = new SolidColorBrush(_D3DCOLORVALUE.YellowGreen); // well-known colors
    parent.Children.Add(border);

    var textBox = new TextBox();
    textBox.Padding = 10;
    border.Children.Add(textBox);
    textBox.Text = "Text inside a round border";
    textBox.FontSize = 18;
}</sample>
  <sample namespace="Samples.Layout.Border.SimpleBorderSample">void Layout(Visual parent)
{
    var border = new Border();
    border.BorderThickness = 2;
    border.HorizontalAlignment = Alignment.Near; // force border to use child's size (default is Stretch)
    border.BorderBrush = new SolidColorBrush(new _D3DCOLORVALUE(0xFFFFD700)); // by-value color
    parent.Children.Add(border);

    var textBox = new TextBox();
    textBox.Padding = 10;
    border.Children.Add(textBox);
    textBox.Text = "Text inside a border";
    textBox.FontSize = 18;
}</sample>
  <sample namespace="Samples.Layout.Canvas.BoundsCanvasSample">void Layout(Visual parent)
{
    var canvas = new Canvas();
    canvas.Width = 120;
    canvas.Height = 120;
    canvas.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Gray);
    parent.Children.Add(canvas);

    var b0 = new Border();
    b0.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Red);
    b0.Width= 40;
    b0.Height= 40;
    Canvas.SetLeft(b0, 0);
    Canvas.SetTop(b0, 0);
    canvas.Children.Add(b0);

    var b1 = new Border();
    b1.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Blue);
    b1.Width= 40;
    b1.Height= 40;
    Canvas.SetLeft(b1, 0);
    Canvas.SetBottom(b1, 0);
    canvas.Children.Add(b1);

    var b2 = new Border();
    b2.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Green);
    b2.Width= 40;
    b2.Height= 40;
    Canvas.SetRight(b2, 0);
    Canvas.SetTop(b2, 0);
    canvas.Children.Add(b2);

    var b3 = new Border();
    b3.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Yellow);
    b3.Width= 40;
    b3.Height= 40;
    Canvas.SetRight(b3, 0);
    Canvas.SetBottom(b3, 0);
    canvas.Children.Add(b3);
}</sample>
  <sample namespace="Samples.Layout.Canvas.SimpleCanvasSample">void Layout(Visual parent)
{
    var canvas = new Canvas();
    canvas.Width = 120;
    canvas.Height = 120;
    canvas.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Gray);
    parent.Children.Add(canvas);

    var b0 = new Border();
    b0.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Red);
    b0.Width = 40;
    b0.Height = 40;
    Canvas.SetLeft(b0, 0);
    Canvas.SetTop(b0, 0);
    canvas.Children.Add(b0);

    var b1 = new Border();
    b1.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Blue);
    b1.Width = 40;
    b1.Height = 40;
    Canvas.SetLeft(b1, 20);
    Canvas.SetTop(b1, 20);
    canvas.Children.Add(b1);

    var b2 = new Border();
    b2.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Green);
    b2.Width = 40;
    b2.Height = 40;
    Canvas.SetLeft(b2, 40);
    Canvas.SetTop(b2, 40);
    canvas.Children.Add(b2);

    var b3 = new Border();
    b3.RenderBrush = Compositor.CreateColorBrush(_D3DCOLORVALUE.Yellow);
    b3.Width = 40;
    b3.Height = 40;
    Canvas.SetLeft(b3, 60);
    Canvas.SetTop(b3, 60);
    canvas.Children.Add(b3);
}</sample>
</samples>